老师你好，现在我来介绍一下这个使用vue2.0构建的仿京东app的移动端小项目。项目使用脚手架搭建。用到的技术栈主要有scss，vuex，vue-router，vant组件库，项目整体使用组件化思想，把一个页面分成多个小组件。同时下面这5个选项都有着对应的专属路由页面。每个组件负责专属的功能。这样既能高效开发同时在出现bug的时候也能够及时定位到出错的组件。接下来我就说一下这些具体是怎么做的，首先就是在路由views文件中新建一个home.vue这个作为项目的根路由，后续的所有抽离出去的小组件就都写在这个根文件上面，一进来呈现的是头部打开京东app这个广告，我注意到这个这个广告栏同时也会在其他页面出现，所以这可以做成一个高频复用组件，在脚手架下新建一个heightcomponents用作专属的高频组件文件夹，以后所有的高频复用组件都放在这里。
写完具体广告组件之后就在首页路由文件中引入。再其次就是这个搜索栏。这个搜索栏实际上是点击之后跳转到另外一个新的页面，这就是路由跳转，于是就可以在搜索组件之下新建一个子路由为新的搜索页面，再就是下面的页尾处5个功能按键，这也可以作为一个高频复用组件，给每一个按键添加点击路由跳转事件，这样点击就会跳到对应的页面。以及这个回到顶部就是给这个搜索栏绑定一个滚动事件，当页面滚动距离大于等于这里的时候就显示这个top按键。点击就回到顶部。
中间的图片轮播以及下面的多功能按钮区域都是使用vant组件库中的轮播图组件完成，只需要在组件生命周期created函数处发送axios请求获取轮播图以及多功能组件的数据填到vant组件中即可；
再接下来就是京东秒杀区域，同理这也是分离出去的一个单独组件。倒计时为vant组件。秒杀商品则同上都为生命周期created函数处发送axios请求获取；
再下面就是商品列表区域，这一区域也是通过抽离组件形式单独抽出去。再通过axios请求获取商品列表数据再实时渲染。
接下来是分类功能，先通过axios获取数据。然后把获取的数据存到data下的shoplist属性中，然后再根据数据循环写出左边的分类项，然后再根据封装函数获取已点击左边的分类项的index，根据这个index就可以获取到shoplist中的已点击的这个类下的子商品数据，然后再根据这个数据实时渲染对应的页面。
接下来的购物车和登录功能都需要写两个不同的版本，其中没有登录显示的就是这两个页面。登录成功之后显示的就是登陆成功的页面。这里判断是否已经登陆过我使用的是   sai shen story reji 每次登录之后就会在浏览器存贮一个数据，退出浏览器之后就消失需要重新登陆；
再就是功能比较多的商品详情页，在实际开发中我想应该是点击商品之后会通过get请求提交商品专属id之后获取到商品专属数据再根据数据写页面。这里我是只写了一个。 商品详情也同样是组件化思想，把功能都单独抽离出去。分为标题，详情，评论，款式等多个小组件，然后再通过组件传值把商品数据从父组件传输到子组件，这个头部和底部都是comment中写的头部和底部组件。商品款式里尺码等都根据请求的数据渲染。这个京东保障服务其实是在请求的数据中会有一个属性，值为0就代表没有京东服务。为1就有保障服务。这里默认为1，就可以根据数据再写出对应的服务选项。这个点击加入购物车是通过vuex实现。点击之后会生成一个对象，这个对象包含用户点击加入购物车按钮时 商品的所有数据。比如颜色 尺码  数量等。然后触发方法修改vuex中的state中的值，再到这个购物车页面。根据vuex中的state值实时写出对应的页面。
